
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
$custom-primary-map: (
    50  : #EAEAFF,
    100 : #CACBFD,
    200 : #A6A9FC,
    300 : #7F87FC,
    400 : #6069F9,
    500 : #424BF5,
    600 : #3D42E9,
    700 : #3335DC,
    800 : #2A28D1,
    900 : #1700C0,
    950 : #09004D        ,
    contrast: (
         50 : #FAFAFA,
        100 : #F5F5F5,
        200 : #E5E5E5,
        300 : #D4D4D4,
        400 : #A3A3A3,
        500 : #737373,
        600 : #525252,
        700 : #404040,
        800 : #262626,
        900 : #171717,
        950 : #0A0A0A,
        
    )
);
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$FrontEnd-primary: mat.define-palette(mat.$indigo-palette);
$FrontEnd-accent: mat.define-palette($custom-primary-map);

// The warn palette is optional (defaults to red).
$FrontEnd-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$FrontEnd-theme: mat.define-light-theme((
  color: (
    primary: $FrontEnd-primary,
    accent: $FrontEnd-accent,
    warn: $FrontEnd-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($FrontEnd-theme);

